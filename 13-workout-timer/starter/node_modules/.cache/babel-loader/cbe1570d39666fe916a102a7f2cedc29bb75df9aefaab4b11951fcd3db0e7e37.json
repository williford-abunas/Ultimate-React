{"ast":null,"code":"var _jsxFileName = \"/home/williford/Ultimate-React/13-workout-timer/starter/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useMemo } from \"react\";\nimport Calculator from \"./Calculator\";\nimport ToggleSounds from \"./ToggleSounds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTime(date) {\n  return new Intl.DateTimeFormat(\"en\", {\n    month: \"short\",\n    year: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(date);\n}\nfunction App() {\n  _s();\n  const [allowSound, setAllowSound] = useState(true);\n  const [time, setTime] = useState(formatTime(new Date()));\n\n  // Will be be AM or PM\n  const partOfDay = time.slice(-2);\n  const workouts = useMemo(() => {\n    return [{\n      name: \"Full-body workout\",\n      numExercises: partOfDay === \"AM\" ? 9 : 8\n    }, {\n      name: \"Arms + Legs\",\n      numExercises: 6\n    }, {\n      name: \"Arms only\",\n      numExercises: 3\n    }, {\n      name: \"Legs only\",\n      numExercises: 4\n    }, {\n      name: \"Core only\",\n      numExercises: partOfDay === \"AM\" ? 5 : 4\n    }];\n  }, [partOfDay]);\n  useEffect(function () {\n    const id = setInterval(function () {\n      setTime(formatTime(new Date()));\n    }, 1000);\n    return () => clearInterval(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Workout timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: [\"For your workout on \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleSounds, {\n      allowSound: allowSound,\n      setAllowSound: setAllowSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n      workouts: workouts,\n      allowSound: allowSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TS8bbriygSEM5rp9WKF9oPVPBv4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useMemo","Calculator","ToggleSounds","jsxDEV","_jsxDEV","formatTime","date","Intl","DateTimeFormat","month","year","hour","minute","second","format","App","_s","allowSound","setAllowSound","time","setTime","Date","partOfDay","slice","workouts","name","numExercises","id","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/williford/Ultimate-React/13-workout-timer/starter/src/App.js"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\nimport Calculator from \"./Calculator\";\nimport ToggleSounds from \"./ToggleSounds\";\n\nfunction formatTime(date) {\n  return new Intl.DateTimeFormat(\"en\", {\n    month: \"short\",\n    year: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  }).format(date);\n}\n\nfunction App() {\n  const [allowSound, setAllowSound] = useState(true);\n  const [time, setTime] = useState(formatTime(new Date()));\n\n  // Will be be AM or PM\n  const partOfDay = time.slice(-2);\n\n  const workouts = useMemo(() => {\n    return [\n    {\n      name: \"Full-body workout\",\n      numExercises: partOfDay === \"AM\" ? 9 : 8,\n    },\n    {\n      name: \"Arms + Legs\",\n      numExercises: 6,\n    },\n    {\n      name: \"Arms only\",\n      numExercises: 3,\n    },\n    {\n      name: \"Legs only\",\n      numExercises: 4,\n    },\n    {\n      name: \"Core only\",\n      numExercises: partOfDay === \"AM\" ? 5 : 4,\n    },\n  ]}, [partOfDay]);\n\n \n\n  useEffect(function () {\n    const id = setInterval(function () {\n      setTime(formatTime(new Date()));\n    }, 1000);\n\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <main>\n      <h1>Workout timer</h1>\n      <time>For your workout on {time}</time>\n      <ToggleSounds allowSound={allowSound} setAllowSound={setAllowSound}/>\n      <Calculator workouts={workouts} allowSound={allowSound}/>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACpD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,UAAUA,CAACC,IAAI,EAAE;EACxB,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IACnCC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC,CAACC,MAAM,CAACR,IAAI,CAAC;AACjB;AAEA,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACM,UAAU,CAAC,IAAIgB,IAAI,EAAE,CAAC,CAAC;;EAExD;EACA,MAAMC,SAAS,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;EAEhC,MAAMC,QAAQ,GAAGxB,OAAO,CAAC,MAAM;IAC7B,OAAO,CACP;MACEyB,IAAI,EAAE,mBAAmB;MACzBC,YAAY,EAAEJ,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG;IACzC,CAAC,EACD;MACEG,IAAI,EAAE,aAAa;MACnBC,YAAY,EAAE;IAChB,CAAC,EACD;MACED,IAAI,EAAE,WAAW;MACjBC,YAAY,EAAE;IAChB,CAAC,EACD;MACED,IAAI,EAAE,WAAW;MACjBC,YAAY,EAAE;IAChB,CAAC,EACD;MACED,IAAI,EAAE,WAAW;MACjBC,YAAY,EAAEJ,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG;IACzC,CAAC,CACF;EAAA,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAIhBxB,SAAS,CAAC,YAAY;IACpB,MAAM6B,EAAE,GAAGC,WAAW,CAAC,YAAY;MACjCR,OAAO,CAACf,UAAU,CAAC,IAAIgB,IAAI,EAAE,CAAC,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMQ,aAAa,CAACF,EAAE,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtB9B,OAAA;MAAA0B,QAAA,GAAM,sBAAoB,EAACX,IAAI;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvC9B,OAAA,CAACF,YAAY;MAACe,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACrE9B,OAAA,CAACH,UAAU;MAACuB,QAAQ,EAAEA,QAAS;MAACP,UAAU,EAAEA;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpD;AAEX;AAAClB,EAAA,CAjDQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}